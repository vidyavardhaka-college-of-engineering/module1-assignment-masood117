#include <stdio.h>

#define N 3

// Function to print a puzzle state
void printPuzzle(int puzzle[N][N]) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N; j++)
            printf("%d ", puzzle[i][j]);
        printf("\n");
    }
    printf("\n");
}

// Function to swap two integers
void swap(int* a, int* b) {
    int temp = *a;
    *a = *b;
    *b = temp;
}


// Function to move the empty tile right
void moveRight(int puzzle[N][N]) {
    for (int i = 0; i < N; i++) {
        for (int j = 0; j < N - 1; j++) {
            if (puzzle[i][j] == 0 && j != N - 1) {
                swap(&puzzle[i][j], &puzzle[i][j + 1]);
                return;
            }
        }
    }
}

// Function to move the empty tile down
void moveDown(int puzzle[N][N]) {
    for (int i = 0; i < N - 1; i++) {
        for (int j = 0; j < N; j++) {
            if (puzzle[i][j] == 0) {
                swap(&puzzle[i][j], &puzzle[i + 1][j]);
                return;
            }
        }
    }
}

int main() {
    int puzzle[N][N] = {
        {0, 1, 3},
        {4, 2, 5},
        {7, 8, 6}
    };

   

    // Print initial state
    printf("Initial State:\n");
    printPuzzle(puzzle);

    // Move 0 to bottom-right corner, then move 8 to bottom-right corner,
    // then move 6 to bottom-left corner, then move 0 to top-right corner,
    // then move 6 to its correct position
    printf("Moving to Goal State:\n");
    moveRight(puzzle);
    printPuzzle(puzzle);
  moveDown(puzzle);
    printPuzzle(puzzle);
   moveRight(puzzle);
    printPuzzle(puzzle);
    moveDown(puzzle);
    printPuzzle(puzzle);

    // Print final state
    printf("Goal State:\n");
    printPuzzle(puzzle);

    return 0;
}